<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hanjianfei111.github.io</id>
    <title>Gridea</title>
    <updated>2025-10-30T08:37:56.033Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hanjianfei111.github.io"/>
    <link rel="self" href="https://hanjianfei111.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://hanjianfei111.github.io/images/avatar.png</logo>
    <icon>https://hanjianfei111.github.io/favicon.ico</icon>
    <rights>All rights reserved 2025, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[CSP]]></title>
        <id>https://hanjianfei111.github.io/post/csp/</id>
        <link href="https://hanjianfei111.github.io/post/csp/">
        </link>
        <updated>2025-10-30T07:52:39.000Z</updated>
        <content type="html"><![CDATA[<p>CSP（内容安全策略）。这是一个非常重要的网络安全技术，用于防范跨站脚本（XSS）等攻击。<br>
csp策略可通过nginx、Apache等配置文件进行配置。<br>
一、CSP 是什么？<br>
CSP 的核心概念是“白名单制度”。它通过一个特殊的 HTTP 响应头（Content-Security-Policy）告诉浏览器：“这个网页只允许加载和执行来自我明确认可的来源的资源，其他一律阻止。”<br>
换句话说，即使攻击者成功向你的网站注入了恶意脚本（例如通过XSS），如果该脚本的来源不在你批准的“白名单”上，浏览器也不会执行它，从而从根本上遏制了攻击。<br>
二、CSP 是如何工作的？一个生动的比喻<br>
想象一下你的网站是一个高级派对（你的网页），而浏览器是门口的保安（执行策略）。<br>
•	没有 CSP 的情况： 保安允许任何人（任何脚本、资源）进入派对，只要他们看起来是客人。攻击者可以轻易伪装成客人混入。<br>
•	有 CSP 的情况： 你给保安一份白名单（CSP 策略）。保安会严格检查每个想进入派对的客人（脚本、图片、样式表等），只有来自白名单上地址的客人才被允许进入。陌生人（恶意脚本）会被立刻拦在门外。<br>
三、CSP 策略详解：如何制定“白名单”？<br>
CSP 策略由一系列指令构成，每个指令控制一种特定类型资源的加载来源。<br>
常见指令及其作用<br>
<img src="https://hanjianfei111.github.io/post-images/1761812839353.PNG" alt="" loading="lazy"></p>
<p>常用的源关键字<br>
<img src="https://hanjianfei111.github.io/post-images/1761812907947.PNG" alt="" loading="lazy"><br>
四、实战示例：CSP 策略分析<br>
假设我们有一个网站，它的 CSP 头如下：<br>
<img src="https://hanjianfei111.github.io/post-images/1761813084137.PNG" alt="" loading="lazy"><br>
让我们分解这个策略：</p>
<ol>
<li>default-src 'self';：<br>
o	默认规则：所有类型的资源，如果没有特别指定，都只允许从本站加载。</li>
<li>script-src 'self' https://cdnjs.cloudflare.com;：<br>
o	脚本规则：允许执行来自本站和 https://cdnjs.cloudflare.com（一个公共CDN）的JavaScript。<br>
o	效果：阻止所有其他来源的脚本，包括页面上的内联脚本（如 <script>alert('xss')</script>）和 eval() 等函数。</li>
<li>img-src 'self' https: data:;：<br>
o	图片规则：允许加载本站、任何HTTPS网站以及data:URI格式的图片。</li>
<li>style-src 'self' 'unsafe-inline';：<br>
o	样式规则：允许本站的样式表和内联样式。<br>
o	注意：允许内联样式 (‘unsafe-inline’) 会降低对CSS注入攻击的防护，但有时是迁就旧代码的无奈之举。</li>
<li>report-uri /csp-report;：<br>
o	报告规则：任何违反上述策略的行为都会被浏览器记录下来，并以JSON格式发送到网站的 /csp-report 端点。这对调试和监控攻击尝试非常有用。<br>
错误示例：<br>
Content-Security-Policy: default-src https: 'unsafe-eval' 'unsafe-inline' *.test.com; img-src * data:<br>
•	https:：允许从任何 HTTPS 站点加载资源。<br>
o	影响：脚本、样式、字体、连接等都可以来自互联网上任意一个支持HTTPS的域名。这极大地扩大了攻击面。<br>
•	'unsafe-eval'：允许使用动态代码执行函数，如 eval(), setTimeout(string), new Function() 等。<br>
o	风险：许多基于DOM的XSS攻击依赖这些函数来执行恶意负载。此指令为这类攻击敞开了大门。<br>
•	'unsafe-inline'：允许执行内联资源。<br>
o	风险：允许页面中的内联script块和内联事件处理程序（如 onclick=&quot;...&quot;）。攻击者如果能够向页面注入HTML，他们注入的恶意内联脚本将能够执行。这几乎完全抵消了CSP防御XSS的核心价值。<br>
•	*.test.com：允许从 test.com 及其所有子域加载资源。<br>
o	注意：由于前面已经有了 https:，这个源指示实际上是冗余的，因为 https: 已经涵盖了所有HTTPS网站，包括 *.test.com。<br>
总结：default-src 指令实际上等同于 “允许从任何地方加载HTTPS资源，并允许执行任何形式的代码”。这为XSS攻击提供了极大的便利。<br>
五、CSP 的巨大安全价值</li>
<li>有效缓解 XSS 攻击：这是CSP最主要的目的。即使存在XSS漏洞，恶意脚本也无法执行。</li>
<li>限制资源加载：防止攻击者从恶意域名加载资源。</li>
<li>提供报告机制：通过违规报告，开发者可以及时发现和修复潜在漏洞或攻击尝试。<br>
部署建议<br>
•	从报告模式开始：在正式启用拦截策略前，可以先使用 Content-Security-Policy-Report-Only 头。该头只报告违规行为而不阻止它们，帮助你安全地测试和调整策略。<br>
•	采用“最小权限原则”：只授予必要的权限。例如，如果不需要内联脚本，就绝不使用 ‘unsafe-inline’。<br>
总结：CSP 是一种声明式的、强大的浏览器端安全机制，它通过建立可信资源白名单，极大地增加了攻击者利用XSS等漏洞的难度，是现代Web应用必备的安全防护措施之一。”</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[SUDO提权]]></title>
        <id>https://hanjianfei111.github.io/post/sudo-ti-quan/</id>
        <link href="https://hanjianfei111.github.io/post/sudo-ti-quan/">
        </link>
        <updated>2025-10-28T09:02:40.000Z</updated>
        <content type="html"><![CDATA[<p>linux命令：<br>
1、查找无属主文件<br>
find / -nouser<br>
文件最小权限要求设置600，文件所属目录700<br>
2、查找服务器上是否存在JDK、readelf、gdb等开发测试工具<br>
find / -name jdk*<br>
find / -name gdb<br>
find / -name readelf<br>
3、查找全网监听端口命令<br>
netstat -anp| grep -P '0.0.0.0:\d+|:::\d+'</p>
<p>一. sudo简介<br>
sudo是linux下的一种权限管理机制，是允许普通用户免密码切换到其它用户来执行命令的工具。带来便利的同时也存在了安全隐患。<br>
二. sudo配置的原则<br>
以root权限执行的操作，操作对象必须是安全的，否则，存在低权限用户提权到root的风险。<br>
操作对象的安全性，包括：a.操作对象本身的属主、权限属性 b.操作对象所在目录，及递归的上级目录的属主、权限属性<br>
原则包括：</p>
<ol>
<li>sudoers文件中配置的命令本身（配置字段ALL、/bin/passwd、cat、chmod…）</li>
<li>sudoers中执行脚本内部的参数问题，sudo语句中执行的脚本入参没有标记双引号，可通过空格导致提权</li>
<li>sudoers文件执行脚本内部引用了低权限用户所属的文件</li>
</ol>
<p>实践证明：违反该规则的配置都存在漏洞</p>
<p>样例：<br>
1、命令参数缺少范围限制<br>
a)  test1 ALL=(root) NOPASSWD:/bin/cat<br>
用户test1可进行sudo执行可提权root：sudo cat /etc/shadow<br>
b)  test1 ALL=(root) NOPASSWD:ALL<br>
用户test1可通过sudo执行任意命令，相当于提权至root<br>
2、code ALL=(root) NOPASSWD: /chown.sh</p>
<p>code	用户名：这条规则适用于名为code的用户<br>
ALL	     主机名：规则适用于所有主机<br>
（root）	以谁的身份运行：允许code用户以root身份执行命令<br>
NOPASSWD	免密码：执行时不需要输入密码<br>
:/chown.sh	允许的命令：只允许执行/chown.sh这个特定脚本<br>
允许code用户在任何机器上，无需输入密码，以root权限执行/chown.sh这个脚本<br>
切换到code用户后执行：sudo /chown.sh<br>
如果chown.sh中内容可被利用，比如内容中涉及其他属主的目录或文件，可对目录或文件内容修改，导致提权。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[AI大模型相关资料下载]]></title>
        <id>https://hanjianfei111.github.io/post/ai-da-mo-xing-xiang-guan-zi-liao-xia-zai/</id>
        <link href="https://hanjianfei111.github.io/post/ai-da-mo-xing-xiang-guan-zi-liao-xia-zai/">
        </link>
        <updated>2025-10-27T06:39:38.000Z</updated>
        <content type="html"><![CDATA[<p>外网下载地址【夸克网盘】：<br>
https://pan.quark.cn/s/ef4f66a5ec0a<br>
外网下载地址【百度网盘提取码izg3】：<br>
https://pan.baidu.com/s/1Bbnw5tsK1b50oo2QfUiDqg?pwd=izg3<br>
外网下载地址2【百度网盘提取码8d19】：<br>
https://pan.baidu.com/s/1TyIx4Upr8pqN459G22Rnfg?pwd=8d19<br>
如果都不能下载可以联系我！<br>
二、目录结构<br>
2025最新大模型全套资料（持续更新）<br>
├─①、大模型入门资料<br>
│ DeepSeek+7大热点+全套提示词零基础入门-101页.pdf<br>
│ DeepSeek+DeepResearch：让科研像聊天一样简单.pdf<br>
│ DeepSeek与AI幻觉.pdf<br>
│ DeepSeek从入门到精通.pdf<br>
│ DeepSeek指导手册从入门到精通.pdf<br>
│ Deepseek精通和AI办公提效.pptx<br>
│ DeepSeek赋能职场.pdf<br>
│ 【大模型】ChatGPT从入门到精通.pdf<br>
│ 一本书读懂AIGC：ChatGPT、AI绘画、智能文明与生产力变革.pdf<br>
│ 从零开始大模型开发与微调基于PyTorch与ChatGLM.pdf<br>
│ 基于GPT-3、ChatGPT、GPT-4等 Transformer 架构的自然语言处理.pdf<br>
│ 大模型应用开发极简入门：基于 GPT-4 和 ChatGPT.pdf<br>
│ 大模型应用开发极简入门：基于 GPT-4 和 ChatGPT_2024.pdf<br>
│ 大模型的本地部署和微调.pptx<br>
│ 大规模语言模型：从理论到实践.pdf<br>
│ 大语言模型（LLM）新手入门指南（英译中）-英伟达.pdf<br>
│ 普通人如何抓住DeepSeek红利.pdf<br>
│ （大模型黑书）基于GPT-3、ChatGPT、GPT-4等 Transformer 架构的自然语言处理(OCR).pdf<br>
├─②、AI产品经理书籍与面试<br>
│ AI产品经理入门手册（上）.pdf<br>
│ AI产品经理入门手册（下）.pdf<br>
│ AI产品经理的必修课：系统化思维.pdf<br>
│ AI产品经理需了解的技术知识：语音识别技术.pdf<br>
│ AI产品经理需要了解的数据标注工作入门.pdf<br>
│ AI产品经理需要了解的语音交互评价指标.pdf<br>
│ ai产品经理面试高频100题.pdf<br>
│ AI产品经理，如何面对数据挖掘？.pdf<br>
│ AI时代的产品经理：应重视产品的可演进性.pdf<br>
│ AI赋能：AI重新定义产品经理 (连诗路 [连诗路]) .pdf<br>
│ 「65页PDF」深度学习精华汇总-产品经理的AI知识库.pdf<br>
│ 【重磅福利】人工智能产品经理的新起点（200页PPT免费下载）.pdf<br>
│<br>
├─③、电子书 视频教程<br>
│ ├─《DeepSeek从入门到精通》<br>
│ │ 1. DeepSeek是什么？.mp4<br>
│ │ 2. DeepSeek实用技能分享.mp4<br>
│ │ 3. DeepSeek的多个应用场景讲解.mp4<br>
│ │ 4. Deepseek行业应用与实践.mp4<br>
│ │ 5. DeepSeek与深度研究.mp4<br>
│ │ 6. DeepSeek本地部署与应用构建.mp4<br>
│ │ 7. DeepSeek让科研和聊天一样简单.aud.mp4<br>
│ │<br>
│ ├─《大模型实战高手课》<br>
│ │ 01.开发工程师进阶ai应用型人才.mp4<br>
│ │ 02.从工程学角度分析，ChatGPT为什么爆火.mp4<br>
│ │ 03.本地化部署DeepSeek r1.mp4<br>
│ │ 04.大模型微调：如何基于deepseek-r1 8b构建基本医疗大模型.mp4<br>
│ │ 05.DeepSeek+RAG搭建小应用.mp4<br>
│ │ 06.用fastapi封装大模型接口.mp4<br>
│ │ 08.Pre-Training如何让模型变聪明？.mp4<br>
│ │<br>
│ ├─《普通人如何学好deepseek合集视频》<br>
│ │ 01-deepseek使用指南概述.mp4<br>
│ │ 02-为什么普通人一定要用DeepSeek？.mp4<br>
│ │ 03-DeepSeek的产品线.mp4<br>
│ │ 04-DeepSeek的几种使用方式.mp4<br>
│ │ 05-网页端几个按钮的作用.mp4<br>
│ │ 06-共识：清空之前的提示词&amp;给AI足够的背景信息.mp4<br>
│ │ 07-共识：巧妙利用乔哈里视窗.mp4<br>
│ │ 08-共识：是否可以大白话交流&amp;是否需要指定思考步骤.mp4<br>
│ │ 09-技巧：你是谁+背景信息+你的目标.mp4<br>
│ │ 10-技巧：不要定义过程.mp4<br>
│ │ 11-技巧：明确受众&amp;风格明确.mp4<br>
│ │ 12-技巧：联网功能&amp;补充额外信息.mp4<br>
│ │ 13-技巧：上下文联系&amp;清除记忆.mp4<br>
│ │ 14-技巧：反馈与迭代优化.mp4<br>
│ │ 15-技巧：复杂问题，分步拆解.mp4<br>
│ │ 16-避坑：冗长提示词污染关键词&amp;避免复杂句式.mp4<br>
│ │ 17-避坑：避免分步骤思考&amp;过度角色扮演.mp4<br>
│ │ 18-场景：数学&amp;物理&amp;代码能力.mp4<br>
│ │ 19-场景：写作&amp;文案能力.mp4<br>
│ │ 20-场景：生成mermaid流程图、甘特图，思维导图.mp4<br>
│ │ 21-场景：deepseek+kimi制作ppt.mp4<br>
│ │ 22-场景：日常生活&amp;职业场景.mp4<br>
│ │ 23-场景：简历生成.mp4<br>
│ │ 24-场景：模拟面试.mp4<br>
│ │ 25-指令模型和推理模型的对比.mp4<br>
│ │ 26-不同指令模型、推理模型内部的对比.mp4<br>
│ │ 27-DeepSeek与其它模型的体感对比.mp4<br>
│ │ 28- 部署方式1：API+DeepSeek服务器.mp4<br>
│ │ 29-部署方式2：第三方平台.mp4<br>
│ │ 30-部署方式3：本地算力部署.mp4<br>
│ │ 31-部署方式4：服务器部署.mp4<br>
│ │ 32-DeepSeek-R1的两个核心创新点.mp4<br>
│ │ 33-DeepSeek-R1的训练过程.mp4<br>
│ │ 34-两点展望.mp4<br>
│ │<br>
│ ├─《极速3小时带你零代码搞定实战项目开发部署教程》<br>
│ │ 1-课程导学.mp4<br>
│ │ 10-项目开发-前端（Cursor+idea）部门管理.mp4<br>
│ │ 2-项目环境准备.mp4<br>
│ │ 3-项目设计-数据库设计（DeepSeek）.mp4<br>
│ │ 4-项目设计-数据库检测（DeepSeek）.mp4<br>
│ │ 5-项目设计-接口设计（DeepSeek）1.mp4<br>
│ │ 6-项目设计-接口设计（DeepSeek）2.mp4<br>
│ │ 7-项目开发-服务器端（Cursor+idea）接口开发（部门管理）.mp4<br>
│ │ 8-项目开发-服务器端（Cursor+idea）接口开发（员工管理）.mp4<br>
│ │ 9-项目开发-前端（Cursor+idea）页面布局.mp4<br>
│ │<br>
│ ├─大模型基础<br>
│ │ 01大模型的演变与概念.mp4<br>
│ │ 02大模型的使用与训练.mp4<br>
│ │ 03大模型的特点与分类.mp4<br>
│ │ 04大模型的工作流程.mp4<br>
│ │ 05大模型的应用.mp4<br>
│ │<br>
│ ├─大模型基础入门视频<br>
│ │ 01大模型的演变与概念.mp4<br>
│ │ 02大模型的使用与训练.mp4<br>
│ │ 03大模型的特点与分类.mp4<br>
│ │ 04大模型的工作流程.mp4<br>
│ │ 05大模型的应用.mp4<br>
│ │<br>
│ └─大模型必看电子书<br>
│ BERT基础教程：Transformer大模型实战.pdf<br>
│ Build a Large Language Model (From Scratch) -- Sebastian Raschka -- 2024 -- Manning Publications Co_ -- da37a83a6833048cedff22fda0dfc2b8 -- Anna’s Archive.pdf<br>
│ HuggingFace自然语言处理详解：基于BERT中文模型的任务实战.pdf<br>
│ LangChain 入门指南构建高可复用、可扩展的 LLM 应用程序.pdf<br>
│ LLM Cookbook，一份正在悄悄风靡全球的大模型开发手册！（吴恩达教程汉化版）.pdf<br>
│ LLM大模型学习圣经（卷1）：从0到1吃透Transformer技术底座-v1.pdf<br>
│ LLM大模型学习圣经（卷2）：从0到1吃透大模型的LLM基础实操，冲向年薪100W.pdf<br>
│ LLM大模型学习圣经（卷3）：从0到1吃透大模型的顶级LLM架构，冲向年薪100W.pdf<br>
│ 《TensorFlow机器学习实战指南》.pdf<br>
│ 《动手做ai agent》.pdf<br>
│ 《自然语言处理：大模型理论与实践》（预览版）.pdf<br>
│ 大模型应用开发极简入门：基于 GPT-4 和 ChatGPT_2024.pdf<br>
│ 大模型时代：ChatGPT开启通用人工智能浪潮_龙志勇；黄雯_.pdf<br>
│ 大语言模型综述.pdf<br>
│ 面向开发者的 LLM 入门课.pdf<br>
│ （大模型黑书）基于GPT-3、ChatGPT、GPT-4等 Transformer 架构的自然语言处理(OCR).pdf<br>
│ （西瓜书）周志华-机器学习.pdf<br>
│<br>
├─④、大模型实战落地案例<br>
│ 01-ChatGPT入门-爆火出圈的ChatGPT-116页.pdf<br>
│ 02-ChatGPT项目实战-理解真实业务场景中, ChatGPT的使用方式-63页 .pdf<br>
│ 03-ChatGPT原理-挖掘ChatGPT底层原理, 理解实现方法-78页.pdf<br>
│ 1.技术解析篇-DeepSeek入门宝典.pptx<br>
│ 2.开发实战篇-DeepSeek入门宝典.pptx<br>
│ 2024大模型典型示范应用案例集.pdf<br>
│ 2025大模型落地应用案例集.pdf<br>
│ 3.行业应用篇-DeepSeek入门宝典.pptx<br>
│ 4.个人使用篇-DeepSeek入门宝典.pptx<br>
│ 《DeepSeek原理与项目实战：大模型部署、微调与应用开发（752页）》.pdf<br>
│ 大模型落地应用案例集.pdf<br>
│<br>
├─⑤、大模型八股文面试题<br>
│ 1-大模型（LLMs）基础面.pdf<br>
│ 10-LLMs 训练经验帖.pdf<br>
│ 11-大模型（LLMs）langchain 面.pdf<br>
│ 12-多轮对话中让AI保持长期记忆的8种优化方式篇.pdf<br>
│ 13-基于langchain RAG问答应用实战.pdf<br>
│ 14-基于LLM+向量库的文档对话 经验面.pdf<br>
│ 15-大模型 RAG 经验面.pdf<br>
│ 16-LLM文档对话 —— pdf解析关键问题.pdf<br>
│ 17-大模型（LLMs）RAG 版面分析——表格识别方法篇.pdf<br>
│ 18-大模型（LLMs）RAG 版面分析——文本分块面.pdf<br>
│ 19-大模型外挂知识库优化——如何利用大模型辅助召回？.pdf<br>
│ 2-Layer normalization 篇.pdf<br>
│ 20-大模型外挂知识库优化——负样本样本挖掘篇.pdf<br>
│ 21-RAG（Retrieval-Augmented Generation）评测面.pdf<br>
│ 22-检索增强生成(RAG) 优化策略篇.pdf<br>
│ 23-大模型（LLMs）RAG —— 关键痛点及对应解决方案.pdf<br>
│ 24-大模型（LLMs）RAG 优化策略 —— RAG-Fusion篇.pdf<br>
│ 25-Graph RAG 面 — 一种 基于知识图谱的大模型检索增强实现策略.pdf<br>
│ 26-大模型（LLMs）参数高效微调(PEFT) 面.pdf<br>
│ 27-适配器微调（Adapter-tuning）篇.pdf<br>
│ 28-提示学习（Prompting）篇.pdf<br>
│ 29-LoRA 系列篇.pdf<br>
│ 3-LLMs 激活函数篇.pdf<br>
│ 30-如何使用 PEFT库 中 LoRA？.pdf<br>
│ 31-大模型（LLMs）推理面.pdf<br>
│ 32-大模型（LLMs）增量预训练篇.pdf<br>
│ 33-增量预训练（Pretrain）样本拼接篇.pdf<br>
│ 34-基于lora的llama2二次预训练.pdf<br>
│ 35-大模型（LLMs）评测面.pdf<br>
│ 36-大模型（LLMs）强化学习面.pdf<br>
│ 37-大模型（LLMs）强化学习——RLHF及其变种面.pdf<br>
│ 38-大模型（LLMs）强化学习—— PPO 面.pdf<br>
│ 39-强化学习在自然语言处理下的应用篇.pdf<br>
│ 4-Attention 升级面.pdf<br>
│ 40-大模型（LLMs）训练集面.pdf<br>
│ 41-大模型（LLMs）LLM生成SFT数据方法面.pdf<br>
│ 42-大模型（LLMs）显存问题面.pdf<br>
│ 43-显存优化策略篇.pdf<br>
│ 44-大模型（LLMs）分布式训练面.pdf<br>
│ 45-图解分布式训练（一） —— 流水线并行（Pipeline Parallelism）.pdf<br>
│ 46-图解分布式训练（二） —— nn.DataParallel篇.pdf<br>
│ 47-图解分布式训练（三） —— nn.parallel.DistributedDataParallel.pdf<br>
│ 48-图解分布式训练（四） —— torch.multiprocessing 详细解析.pdf<br>
│ 49-图解分布式训练（五） —— AMP混合精度训练 详细解析.pdf<br>
│ 5-transformers 操作篇.pdf<br>
│ 50-图解分布式训练（六）—— Pytorch的 DeepSpeed 详细解析.pdf<br>
│ 51-图解分布式训练（七）—— accelerate 分布式训练 详细解析.pdf<br>
│ 52-图解分布式训练（八）—— ZeRO 学习.pdf<br>
│ 6-LLMs 损失函数篇.pdf<br>
│ 7-相似度函数篇.pdf<br>
│ 8-大模型（LLMs）进阶面.pdf<br>
│ 9-大模型（LLMs）微调面.pdf<br>
│<br>
├─⑥、行业报告，白皮书<br>
│ 2023年度十大前沿科技趋势报告.pdf<br>
│ 2024中国“大模型+数据分析”最佳实践案例TOP10.pdf<br>
│ 2024中国“大模型+智能客服”最佳实践案例TOP10.pdf<br>
│ 2024中国大模型先锋案例TOP30.pdf<br>
│ 2024人工智能大模型技术财务应用蓝皮书.pdf<br>
│ 2024大模型技术深度赋能保险行业白皮书.pdf<br>
│ 2024大语言模型能力测评报告.pdf<br>
│ 2024年中国AI大模型场景探索及产业应用调研报告-大模型“引爆”行业新一轮变革.pdf<br>
│ 2024年五大趋势—深度技术需要深度信任.pdf<br>
│ 2024智能算力产业发展白皮书.pdf<br>
│ 2024行业大模型调研报告.pdf<br>
│ 2024面向未来的算力网络连接-中国算力网络市场发展白皮书.pdf<br>
│ 2025大模型原理、技术与应用：从GPT到DeepSeek.pdf<br>
│ 2025大模型技术深度赋能保险行业白皮书.pdf<br>
│ 2025年AI技术全景入门分享.pptx<br>
│ 2025年《大模型基准测试体系研究报告》.pdf<br>
│ 2025年《知识图谱与大模型融合实践研究报告》.pdf<br>
│ 2025年中国AI Agent行业研究报告.pptx<br>
│ 2025年中国AI大模型产业发展报告.pdf<br>
│ 2025年中文大模型基准测评报告.pdf<br>
│ 2025年具身智能发展报告.pdf<br>
│ 2025年多模态大语言模型（MLLMs）轻量化方法研究现状和展望报告.pdf<br>
│ 2025年大模型应用落地白皮书：企业AI转型行动指南.pdf<br>
│ 2025年大模型混合云十大创新技术白皮书5.0-华为.pdf<br>
│ 2025年智能算力产业发展白皮书.pdf<br>
│ 2025年行业大模型调研报告.pdf<br>
│ AI Agent行业研究报告.pdf<br>
│ AI跃迁的2023，中文大模型进展评估：中文大模型基准测评年度报告.pdf<br>
│ CGE模型在中国的应用.pdf<br>
│ 《大模型基准测试体系研究报告（2024年）》.pdf<br>
│ 《知识图谱与大模型融合实践研究报告》.pdf<br>
│ 【大模型】2025年AI大模型训练数据白皮书.pdf<br>
│ 中国AI大模型场景探索及产业应用调研报告-大模型“引爆”行业新一轮变革.pdf<br>
│ 中国AI大模型应用研究报告.pdf<br>
│ 中国NLP大模型行业概览：重塑人机交互，NLP大模型引领未来.pdf<br>
│ 中国“大模型+数据分析”最佳实践案例TOP10.pdf<br>
│ 中国“大模型+智能客服”最佳实践案例TOP10.pdf<br>
│ 中国企业AI大模型落地应用现状调研报告.pdf<br>
│ 中国大模型先锋案例TOP30.pdf<br>
│ 中国开源开发者报告-LLM技术报告.pdf<br>
│ 中文大模型基准测评年度报告.pdf<br>
│ 中文大模型基准测评报告2023.pdf<br>
│ 五大趋势—深度技术需要深度信任.pdf<br>
│ 人工智能大模型技术财务应用蓝皮书.pdf<br>
│ 佐思汽研：2024汽车AI大模型TOP10分析报告-59页.pdf<br>
│ 佐思汽研：汽车AI大模型TOP10分析报告.pdf<br>
│ 体系化人工智能技术（Holistic-AI）技术探索.pdf<br>
│ 具身智能发展报告（2024年）.pdf<br>
│ 北京市人工智能行业大模型创新应用白皮书.pdf<br>
│ 区块链数据模型技术与应用研究报告.pdf<br>
│ 医疗健康AI大模型行业研究报告.pdf<br>
│ 国内超大型智能算力中心建设白皮书 2024.pdf<br>
│ 大模型可信赖研究报告.pdf<br>
│ 大模型在日志运维场景的应用实践.pdf<br>
│ 大模型在金融行业的落地探索.pdf<br>
│ 大模型技术深度赋能保险行业白皮书.pdf<br>
│ 大模型时代，金融行业如何破解先进存力之困？.pdf<br>
│ 大模型行业合规白皮书.pdf<br>
│ 大模型行业招标需求分析简报.pdf<br>
│ 大模型金融应用实践及发展建议.pdf<br>
│ 大模型金融应用实践及发展建议报告.pdf<br>
│ 大语言模型能力测评报告.pdf<br>
│ 大语言模型赋能自动化测试实践、挑战与展望-复旦大学-54页.pptx<br>
│ 年度十大前沿科技趋势报告.pdf<br>
│ 深度用云展望2025白皮书.pdf<br>
│ 矿山智能化暨矿山大模型最佳实践白皮书.pdf<br>
│ 迈入模型对抗时代-2023年商业银行风控趋势调研报告.pdf<br>
│ 迈入模型对抗时代-商业银行风控趋势调研报告.pdf<br>
│ 阿里研究院：2024大模型训练数据白皮书-32页.pdf<br>
│ 面向未来的算力网络连接-中国算力网络市场发展白皮书.pdf<br>
│<br>
└─⑧、学习路线 课程大纲<br>
MoPaaS·智泊Al企业级 大模型实战课大纲V5.0.15.pdf</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[xss]]></title>
        <id>https://hanjianfei111.github.io/post/xss/</id>
        <link href="https://hanjianfei111.github.io/post/xss/">
        </link>
        <updated>2025-10-27T03:51:25.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<p>xss解析顺序：html解析器最优先进行、之后可能是javascript解析或url解析<br>
分别对应html编码、unicode编码、url编码</p>
<p>html通常以&amp;符号开始，比如“&lt;”对应 &lt;<br>
unicode编码通常\u后跟着四个十六进制数字</p>
<p>反射型XSS<br>
定义：反射型XSS也称为参数型XSS、非持久型，最常见用于将恶意脚本附加到URL地址的参数中，常出现在网站搜索栏、用户登入口等地方，用来窃取客户端cookie或进行钓鱼欺骗。反射型根因是服务端漏洞。</p>
<p>利用方法：攻击者利用特定手法（Email、站内私信等），诱导用户去访问一个包含恶意代码的URL，当受害者单击这些恶意链接，JS代码直接在受害者主机上的浏览器执行。</p>
<p>DOM型XSS<br>
定义：DOM-Based XSS是基于DOM文档对象模型的一种漏洞，攻击者通过操纵DOM中的一些对象，例如URL、location等，在客户端输入的数据中，包含一些恶意的JavaScript代码，而如果这些脚本没经过适当过滤，应用程序可能受到基于DOM型的XSS攻击。DOM型是前端漏洞。</p>
<p>存储型XSS<br>
定义：存储型XSS也称持久型XSS。攻击者直接将恶意JS代码上传或存储到漏洞服务器中，当其他用户浏览该页面时，站点即从数据库中读取恶意用户存入的非法数据，即可在受害者浏览器上来执行恶意代码，持久型XSS常见网站留言板、评论、博客、日志等交互处。<br>
提交恶意数据到后端服务器，他人访问同样页面会触发攻击。</p>
<p>XSS 漏洞原理与实际案例介绍</p>
<p>样例：<br>
漏洞点：<button onclick="submitData('${htmlEncode(input)}')">submit</button> //input为被控制的输入<br>
攻击方式：input = ');alert(1)//<br>
攻击结果：<button onclick="submitData('');alert(1)//')">submit</button><br>
原因：在进行元素的解析时，会将事件属性中的变量也一起放入当成一个整体进行解析，也就是上面提到的直接控制变量影响HTML渲染。尽管这里做了转码变为')alert(1)//，但是浏览器渲染的时候又会将属性中的'变为'。</p>
<p>https://www.cnpanda.net/codeaudit/605.html</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[面试复盘]]></title>
        <id>https://hanjianfei111.github.io/post/mian-shi-fu-pan/</id>
        <link href="https://hanjianfei111.github.io/post/mian-shi-fu-pan/">
        </link>
        <updated>2025-10-22T09:33:22.000Z</updated>
        <content type="html"><![CDATA[<p>1、cookie中有哪些属性与安全相关<br>
a.   HttpOnly<br>
作用：阻止javascript访问cookie(document.cookie)<br>
防御：缓解XSS攻击（攻击者无法窃取身份凭据）<br>
示例：Set-Cookie: sessionId=abc123; HttpOnly</p>
<p>b. Secure<br>
作用：仅允许HTTPS协议传输Cookie<br>
防御：防止中间人攻击（明文传输时被窃取）<br>
示例：Set-Cookie: token=xyz;Secure</p>
<p>c.SameSite<br>
作用：控制跨站请求是否发送Cookie<br>
值选项：<br>
Strict：完全禁止跨站发送（如银行操作）<br>
Lax：允许安全GET请求（导航类请求）<br>
None: 允许跨站发送（需配合Secure）<br>
防御：阻止CSRF攻击<br>
示例： Set-Cookie:card id=789; SameSite=Lax</p>
<p>其他关键熟悉<br>
Domain<br>
风险：过度宽松配置导致子域名漏洞<br>
错误示例：Domain=.example.com(所有子域可访问)<br>
正确示例：Domain=app.example.com(仅限当前域)</p>
<p>Path<br>
作用：限制Cookie的URL路径范围<br>
防御：减小攻击面（如管理后台Cookie限定到/admin路径）</p>
<p>Expire/Max-Age<br>
安全影响：过长的有效期增加被盗风险<br>
最佳实践：会话cookie设为浏览器关闭失效，敏感操作使用短时效。</p>
<figure data-type="image" tabindex="1"><img src="https://hanjianfei111.github.io/post-images/1761272744752.PNG" alt="" loading="lazy"></figure>
<p>2、安全测试过程中，发现部分url请求403，考虑怎么进一步测试？<br>
返回403（禁止访问）状态码，意味着碰触到了服务器的访问控制机制。<br>
a.  可考虑修改HTTP方法：尝试将GET改为POST、PUT、DELETE、PATCH、OPTIONS。OPTIONS方法可能会返回服务器允许的方法列表。<br>
b. 请求头：检查原始请求是否携带特定的头（如 Authorization\Referer\User-Agent）.缺失或错误的头部可能会导致403，可尝试伪造请求头，如X-Forwarded-For、Referer等。<br>
c.  参数：分析URL路径和查询字符串中的每一个参数。尝试识别出用于标识用户、角色或资源的参数。<br>
d. 路径回溯：如果请求URL是/api/v1/users/admin/profile,尝试访问其父路径，如/api/v1/users/admin/或/api/v1/users。有时对目录的访问控制与对具体文件的控制不同。<br>
e. 寻找隐藏文件或备份文件：可对路径添加常见后缀，尝试发现备份文件或副本。<br>
对于/api/v1/config，尝试变成/api/v1/config.bak  、/api/v1/config.txt、<br>
/api/v1/config~(常见的备份符号)<br>
f.  路径的遍历与重写：<br>
对URL中的特殊字符进行编码、大小写变换，添加../ ./等</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[xx产品安全质量评估报告]]></title>
        <id>https://hanjianfei111.github.io/post/hjf1/</id>
        <link href="https://hanjianfei111.github.io/post/hjf1/">
        </link>
        <updated>2025-10-22T07:00:28.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li>目的<br>
依据公司要求对公司产品进行把关，以客户视角评估XX产品的安全性，并验证是否符合公司及业界的安全标准、基线和规范，支撑领导及xx组织决策。</li>
<li>评估对象<br>
2.1 评估对象简介<br>
介绍验证的产品的定位和功能介绍XX<br>
2.2 评估范围<br>
此次评估测试范围包括XX前台、XX后端及使用的XX框架。XX如底层环境如操作系统、网络配置等由XX统一维护，不在此次测试范围。<br>
2.3 评估策略<br>
此次检测是XX产品的第X个版本，一方面是回归之前测试发现的问题，检测产品是否对同类型问题进行全面排查整改，同时检测产品的修复方案是否存在漏洞；另一方面，扩展对XX框架和XX服务的安全测试，通过走读XX框架和XX服务的源码，了解其安全功能实现机制，发现产品更深层次漏洞。<br>
2.4  测试组网<br>
附上产品XX组网图</li>
<li>评估方法<br>
采用基于风险的安全评估方法，在发现安全漏洞之外，更重要的是对产品或解决方案做出全面的安全评估，最大程度确保业务商用后客户侧潜在安全风险的最小化。<br>
<img src="https://hanjianfei111.github.io/post-images/1761119071928.PNG" alt="" loading="lazy"><br>
基于风险的安全评估方法从评估产品的系统和威胁分析开始，将产品系统分解后的各模块根据风险高低进行优先级排序，依据优先级对各模块分别进行合规测试和攻击测试。对测试结果做出相应的遗留风险分析，进一步做出商务决策。<br>
安全评估方法，不仅包含XX公司内部在安全领域的优秀实践，还广泛吸收和引用安全业界优秀的实践、标准、法规等。<br>
行业最佳实践/标准，如OWASP，NIST 800-115，Microsoft STRIDE等<br>
实时的行业差距分析、热点安全事故跟踪等<br>
法律、法规和客户的安全要求等。</li>
<li>问题定级标准<br>
使用业界CVSSv3标准进行打分定级；隐私保护类问题如果违反业界规则，通常判定为严重问题。</li>
<li>分析过程<br>
5.1 系统分析<br>
5.1.1 典型业务场景<br>
XXX详细描述被测产品相关的业务场景<br>
5.1.2 系统架构<br>
附上XX产品的系统架构图<br>
5.1.3 相关接口<br>
附上外部交互的接口、内部的接口清单<br>
5.1.4 版本差异分析<br>
对于迭代版本，列出与上次版本之间的差异点：包含功能变化点、接口变化、架构变化等。<br>
5.2 威胁分析<br>
附上产品的数据流图<br>
5.2.1 安全边界分析<br>
列出相应的安全边界<br>
5.2.2 安全风险分析<br>
列出产品的关键资产：包含敏感业务数据、与用户、薪酬、交易等强关联<br>
列出安全威胁：<br>
1、web安全：恶意用户可以通过console界面进行攻击，如注入类攻击（sql注入、命令注入等）、账号安全、权限控制、任意文件上传/下载等。<br>
2、产品权限限制：重点测试不同用户、不同权限级别是否做好严格权限校验<br>
3、系统配置：涉及三方应用配置，如配置中心、配置文件、启动参数等，是否出现信息泄露等问题。<br>
5.3 隐私保护分析<br>
按照业界隐私规范项排查，识别是否产品为数据控制者还是数据处理者？<br>
是否涉及个人敏感数据（婚姻、血型、性取向、身份证号等）、数据收集、使用、留存和处理等。</li>
<li>规范性验证<br>
6.1 包含密码算法规范、密钥管理规范、会话管理规范等<br>
密码算法的选择及随机数的生成、密钥分层管理，即：根密钥和工作密钥要分开，密钥的更新和生成要足够安全，会话维持和会话销毁等。</li>
<li>渗透验证<br>
7.1 病毒扫描<br>
产品要进行多款杀毒软件扫描，包含服务上线的所有安装包。<br>
并对扫描结果做分析和问题解决。<br>
7.2 端口扫描<br>
通常使用Nmap<br>
7.3 开源漏洞扫描</li>
<li>发现问题总览<br>
问题统计：<br>
XX个致命、XX个严重、XX个一般，XX个提示</li>
<li>遗留问题清单<br>
遗留问题要给出风险描述、规避措施、修复计划等</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://hanjianfei111.github.io/post/hello-gridea/</id>
        <link href="https://hanjianfei111.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>